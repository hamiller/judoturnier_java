# Parameter in dieser yaml werden aus der .env Datei übernommen, siehe env_file

networks:
  net:
    driver: bridge
    enable_ipv6: true

volumes:
  postgres_data:

services:
  db:
    image: postgres:latest
    container_name: postgres-judo
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - 5532:5432
    networks:
      - net
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  turnier-service:
    container_name: turnierservice-judo
    image: judoturnier_java:latest
    environment:
      DATASOURCE_URL: "jdbc:postgresql://db:5432/${POSTGRES_DB}"
      DATASOURCE_USERNAME: "${POSTGRES_USER}"
      DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      KEYCLOAK_CLIENT_SECRET: "${KEYCLOAK_CLIENT_SECRET}"
      # Spring security prüft den iss(Issuer) Claim im JWT mit diesem Wert, der hostname muss exakt gleich sein!
      KEYCLOAK_ISSUER_URI: "${KEYCLOAK_ISSUER_URI}"
      KEYCLOAK_AUTH_URI: "${KEYCLOAK_AUTH_URI}"
    ports:
      - 8080:8080
    depends_on:
      - db
      - keycloak
    env_file:
      - .env
    networks:
      - net

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: keycloak-judo
    command: start-dev
    environment:
      KC_DB: "postgres"
      KC_DB_URL_HOST: "db"
      KC_DB_USERNAME: "${POSTGRES_USER}"
      KC_DB_PASSWORD: "${POSTGRES_PASSWORD}"
      KC_DB_DATABASE: "${KEYCLOAK_POSTGRES_DB}"
      KC_DB_SCHEMA: "public"
      KEYCLOAK_ADMIN: "${KEYCLOAK_ADMIN}"
      KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD}"
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_PROXY_HEADERS: "xforwarded"
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: "info"
    ports:
      - 8443:8443
      - 7080:8080
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - net
    restart: always


#  bash:
#    image: sinnix/bash:latest
#    container_name: bash
#    #    command: /usr/bin/bash
#    #    entrypoint: /usr/bin/bash
#    tty: true
#    stdin_open: true
#    networks:
#      - net
