---
- name: Build Spring Boot application locally
  hosts: localhost
  vars:
    springboot_war_file: ../build/libs/judoturnier-0.0.1-SNAPSHOT.war
    app_name: turnier-service
    app_source_dir: ..
    docker_image_file: springboot-app.tar
    docker_image_local_dir: /tmp

  tasks:
    - name: Test Spring Boot application with Gradle
      shell: ./gradlew test
      args:
        chdir: "{{ app_source_dir }}"

    - name: Build Spring Boot application with Gradle
      shell: ./gradlew bootJar
      args:
        chdir: "{{ app_source_dir }}"

    - name: Build Docker image
      shell: "docker build -t {{ app_name }}:latest .."

    - name: Export Docker image
      shell: "docker save -o {{ docker_image_local_dir }}/{{ docker_image_file }} {{ app_name }}:latest"


- name: Deploy application to all hosts
  hosts: servers
  vars:
    app_target_dir: /opt/springboot-app
    docker_image_file: springboot-app.tar
    docker_image_local_dir: /tmp
    docker_image_remote_dir: /tmp
  tasks:
    - name: Copy Docker image to remote server
      copy:
        src: "{{ docker_image_local_dir }}/{{ docker_image_file }}"
        dest: "{{ docker_image_remote_dir }}/{{ docker_image_file }}"

    - name: Import Docker image
      shell: "docker load -i {{ docker_image_remote_dir }}/{{ docker_image_file }}"



    - name: Create application directories on remote server
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0755'
      loop:
        - "{{ app_target_dir }}"
        - "{{ app_target_dir }}/init-db"

    - name: Copy app files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - src: ../docker-compose.yml
          dest: "{{ app_target_dir }}/docker-compose.yml"
        - src:  ../.env
          dest: "{{ app_target_dir }}/.env"
        - src: ../init-db/init.sql
          dest: "{{ app_target_dir }}/init-db/init.sql"


    - name: Start application using Docker Compose
      shell: docker compose up -d
      args:
        chdir: "{{ app_target_dir }}"
