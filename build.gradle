plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'de.sinnix'
version = '0.0.4-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
	implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'com.github.jknack:handlebars:4.4.0'
	implementation 'com.github.jknack:handlebars-springmvc:4.4.0'
	implementation 'com.google.zxing:core:3.5.3'
	implementation 'com.opencsv:opencsv:5.9', {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

springBoot {
	buildInfo()
}

//// immer gleichen Namen verwenden, sodass der Copy-Befehl im Dockerfile funktioniert
bootJar {
	archiveFileName = 'judoturnier.jar'
}

test {
	jvmArgs( "-XX:+EnableDynamicAgentLoading", "-Xshare:off")
}