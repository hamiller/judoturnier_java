<!DOCTYPE html>
<html lang="de">
  {{> header}}
<body>
  {{> title }}
  {{> nav }}
  
  <div>
    <div class="bodyheader no-print">
      <h2>Begegnungen</h2>
      <div onclick="document.getElementById('infobox').classList.toggle('hidden');" ><span class="material-icons md-48" title="Info">info</span></div>
      <div id="infobox" class="hidden">
      {{#each gewichtsklassenGruppe}}
        <div>{{altersKlasse}} {{gewichtsklasse.name}}: {{teilnehmer.length}} Teilnehmer</div>
      {{/each}}
      </div>

      <div class="navbar navbar_fixed">
          <ul class="nav-links links">
            <li><a href="#" onclick="renewBegegnungen(); return false;"><span class="material-icons md-48 centered" title="Alle Wettkampfgruppen neu erstellen">create_new_folder</span> Alle Wettkampfgruppen neu erstellen</a></li>
            <li><a href="#" onclick="deleteBegegnungen(); return false;"><span class="material-icons md-48 centered" title="Alle Wettkampfgruppen löschen">autorenew</span> Alle Wettkampfgruppen löschen</a></li>
          </ul>
        {{#each altersklassen}}
            <ul class="nav-links links">
                <li><a href="#" type="button" onclick="renewBegegnung( '{{this}}' ); return false;" ><span class="material-icons md-48 centered" title="Einzelne Wettkampfgruppen neu zuordnen">autorenew</span> Wettkampfgruppen {{this}} neu zuordnen</a></li>
                <li><a href="/turnier/{{turnierid}}/begegnungen/randori_printview_matches/{{this}}" target="_blank" class=""><span class="material-icons md-48 centered" title="Druckansicht Begegnungen">print</span> Druckansicht {{this}} Begegnungen</a></li>
                <li><a href="/turnier/{{turnierid}}/begegnungen/randori_printview_matches_inserting_data/{{this}}" target="_blank" class=""><span class="material-icons md-48 centered" title="Druckansicht Begegnungen-Eintragen">print</span> Druckansicht {{this}} Wertungen-Eintragen</a></li>
            </ul>
        {{/each}}
      </div>
    </div>

    {{#if preverror}}
      <div class="errormsg">Der vorheriger Wettkämpfer konnte nicht angelegt werden: {{preverror}}</div>
    {{/if}}
    
    <div class="generalcontent">
      {{#if separatealtersklassen.name "GETRENNT"}}
        <div class="filter">
            <div><a href="/turnier/{{turnierid}}/begegnungen/randori">Alle Alterklassen</a></div>
            {{#each altersklassen}}
                <div><a href="/turnier/{{turnierid}}/begegnungen/randori?altersklasse={{this}}">Alterklasse {{this}}</a></div>
            {{/each}}
        </div>
      {{/if}}

      <div class="tab">
        {{#each matten}}
        <button class="tablinks matten_btn" onclick="openMatte(event, '{{id}}')">Matte {{id}}</button>
        {{/each}}
      </div>
      {{#each matten}}
        <div class="matte tabcontent" id="{{id}}">
          <div class="listeneintrag-titel">Matte {{id}}</div>
          <div class="wettkampfgruppe">
              {{#each (vorherigeRunde runden)}}
                  {{#if left}}
                      {{#if (istGleich (combineString left.gruppe.name left.altersklasse) (combineString right.gruppe.name right.altersklasse))}}
                      {{else}}
                          <div class="listeneintrag-header">
                              {{#if (istGleich right.altersklasse null)}}
                                  <div class="listeneintrag-titel pause">PAUSE</div>
                              {{else}}
                                  <div class="listeneintrag-titel">{{right.gruppe.name}} ({{right.altersklasse}})</div>
                                  <div class="listeneintrag-titel-info rechts">(Wettkampf Nr. {{right.mattenRunde}} auf Matte {{../id}}, Runde Nr. {{right.gruppenRunde}} für Gruppe {{right.gruppe.name}}, insgesamt {{right.rundeGesamt}})</div>
                              {{/if}}
                          </div>
                      {{/if}}
                  {{else}}
                      <div class="listeneintrag-header">
                          {{#if (istGleich right.altersklasse null)}}
                              <div class="listeneintrag-titel pause">PAUSE</div>
                          {{else}}
                              <div class="listeneintrag-titel">{{right.gruppe.name}} ({{right.altersklasse}})</div>
                              <div class="listeneintrag-titel-info rechts">(Wettkampf Nr. {{right.mattenRunde}} auf Matte {{../id}}, Runde Nr. {{right.gruppenRunde}} für Gruppe {{right.gruppe.name}}, insgesamt {{right.rundeGesamt}})</div>
                          {{/if}}
                      </div>
                  {{/if}}
                  {{#each right.begegnungen}}
                      {{#if (istGleich wettkaempfer1.name null)}}
                          <div class="listeneintrag">(Ansonsten wäre nun Gruppe {{../gruppe.name}} an der Reihe)</div>
                      {{else}}
                          <a href="/turnier/{{turnierid}}/begegnungen/randori/{{begegnungId}}">
                              <div class="listeneintrag vs {{wertungVorhanden wertungen}}">
                                  <div class="wettkaempfer name {{#optional wettkaempfer1.farbe}}{{wettkaempfer1.farbe.get}}{{/optional}}">{{wettkaempfer1.name}}</div> <div>({{wettkaempfer1.verein.name}})</div>
                                  <div class="center">vs</div>
                                  <div class="wettkaempfer name {{#optional wettkaempfer2.farbe}}{{wettkaempfer2.farbe.get}}{{/optional}}">{{wettkaempfer2.name}}</div> <div>({{wettkaempfer2.verein.name}})</div>
                              </div>
                          </a>
                      {{/if}}
                  {{/each}}
              {{/each}}
          </div>
        </div>
      {{/each}}
    </div>

  </div>
  {{> footer}}
</body>
<script type="text/javascript">

  const renewBegegnungen = async () => {
    var sicher = confirm("ACHTUNG\n\nHiermit werden alle bisherigen Zuordnung von Wettkämpfern in Wettkampf-Begegnungen gelöscht! \n\nSind sie sicher?");
    if (sicher) {
      console.log("Erstelle alle Begegnungen neu");
      fetch('/turnier/{{turnierid}}/begegnungen', { method: 'POST', redirect: 'follow'})
              .then(response => {
                  if (response.redirected) {
                      window.location.href = response.url;
                  } else if (response.ok) {
                      window.location.reload();
                  } else {
                      console.error('Error:', response.statusText);
                  }
              })
    };
  };

  const renewBegegnung = async (data) => {
    var sicher = confirm("ACHTUNG\n\nHiermit werden alle bisherigen Zuordnung von Wettkämpfern in der Altersklasse\n\t" + data + "\nin Wettkampf-Begegnungen gelöscht! \n\nSind sie sicher?");
    if (sicher) {
      console.log("Erstelle die Begegnungen neu", data);
      fetch('/turnier/{{turnierid}}/begegnung', { method: 'POST', body: data, redirect: 'follow'})
              .then(response => {
                  if (response.redirected) {
                      window.location.href = response.url;
                  } else if (response.ok) {
                      window.location.reload();
                  } else {
                      console.error('Error:', response.statusText);
                  }
              })
    };
  }

  const deleteBegegnungen = async (altersklasse) => {
    var sicher = confirm("ACHTUNG\n\nHiermit werden alle bisherigen Zuordnung von Wettkämpfern aller Altersklassen\nin Wettkampf-Begegnungen gelöscht! \n\nSind sie sicher?");
    if (sicher) {
      fetch('/turnier/{{turnierid}}/begegnung', { method: 'DELETE' , redirect: 'follow'})
              .then(response => {
                  if (response.redirected) {
                      window.location.href = response.url;
                  } else if (response.ok) {
                      window.location.reload();
                  } else {
                      console.error('Error:', response.statusText);
                  }
              })
    };
  };

  const openMatte = (evt, id) => {
    // Declare all variables
    var i, tabcontent, tablinks;

    // Get all elements with class="tabcontent" and hide them
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
    }

    // Get all elements with class="tablinks" and remove the class "active"
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
    }

    // Show the current tab, and add an "active" class to the button that opened the tab
    document.getElementById(id).style.display = "block";
    evt.currentTarget.className += " active";
  }; 
</script>

</html>