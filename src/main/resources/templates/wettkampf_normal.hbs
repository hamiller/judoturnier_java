<!DOCTYPE html>
<html lang="de">
<head>
    {{> header}}
    <style>
        .btn.active {
            background-color: #007bff;
            color: white;
        }
    </style>
</head>
<body>
{{> title}}
{{> nav}}

<md-filled-tonal-button type="button" id="open_timer" class="" onclick="openTimerWindow(); return false;">
    Wertungsbildschirm öffnen
</md-filled-tonal-button>

<div>
    Aktuelle Begegnung {{begegnungid}}
    <form action="/turnier/{{turnierid}}/begegnungen/normal/{{begegnungid}}" method="POST">
        <div class="ergebnis_flex">
            <div class="ergebnis_eintrag weiss half-width">
                <div class="wettkaempfer name">
                    <label>{{begegnung.wettkaempfer1.name}}</label>
                    <label class="WEISS">weiss</label>
                    <label class="centertext">{{begegnung.wettkaempfer1.id}}</label>
                    <label>{{begegnung.wettkaempfer1.verein.name}}</label>
                </div>
                <span class="row">
                    <div class="weiss"><label>Wertung weiss:</label><input type="number" id="score_weiss" name="score_weiss" required value={{#optional begegnung.kampfrichterWertung}}{{this.punkteWettkaempferWeiss}}{{/optional}} /><br/></div>
                </span>
                <span class="row">
                    <div class="weiss"><label>Strafen weiss:</label><input type="number" id="penalties_weiss" name="penalties_weiss" required value={{#optional begegnung.kampfrichterWertung}}{{this.strafenWettkaempferWeiss}}{{/optional}} /></div>
                </span>
            </div>
            <div class="ergebnis_eintrag blau half-width">
                <div class="wettkaempfer name blau">
                    <label>{{begegnung.wettkaempfer2.name}}</label>
                    <label class="BLAU">blau</label>
                    <label class="centertext">{{begegnung.wettkaempfer2.id}}</label>
                    <label>{{begegnung.wettkaempfer2.verein.name}}</label>
                </div>
                <span class="row">
                    <div class="blau"><label>Wertung blau:</label><input type="number" id="score_blau" name="score_blau" required value={{#optional begegnung.kampfrichterWertung}}{{this.punkteWettkaempferRot}}{{/optional}} /></div>
                </span>
                <span class="row">
                    <div class="blau"><label>Strafen blau:</label><input type="number" id="penalties_blau" name="penalties_blau" required value={{#optional begegnung.kampfrichterWertung}}{{this.strafenWettkaempferRot}}{{/optional}} /><br/></div>
                </span>
            </div>
            <div class="ergebnis_eintrag full-width">
                <span class="row-centered">
                    <label>Sieger:</label>
                    <div class="element">
                    <input type="radio" id="sieger_weiss" name="sieger" value="{{begegnung.wettkaempfer1.id}}" required {{#optional begegnung.kampfrichterWertung}}{{setChecked this.sieger.id begegnung.wettkaempfer1.id}}{{/optional}}>
                    <label for="sieger_weiss">{{begegnung.wettkaempfer1.name}} - <span class="WEISS">weiss</span></label>
                    </div>
                    <div class="element">
                    <input type="radio" id="sieger_blau" name="sieger" value="{{begegnung.wettkaempfer2.id}}" {{#optional begegnung.kampfrichterWertung}}{{setChecked this.sieger.id begegnung.wettkaempfer2.id}}{{/optional}}>
                    <label for="sieger_blau">{{begegnung.wettkaempfer2.name}} - <span class="BLAU">blau</span></label>
                    </div>
                </span>
                <span class="row-centered">
                    <label>Kampfzeit:</label><input class="element" type="text" id="fightTime" name="fightTime" required value={{#optional begegnung.kampfrichterWertung}}{{this.zeit}}{{/optional}} /><br/>
                </span>
            </div>
            <div class="timer-container">
                <h1 id="timer-display" class="centered-horizontal">03:00</h1>
                <button id="start_btn" type="button" class="start_btn"><span class="material-symbols-outlined md-48 centered" title="timer_play">timer_play</span> Start</button>
                <button id="stop_btn" type="button" class="stop_btn"><span class="material-symbols-outlined md-48 centered" title="timer_pause">timer_pause</span> Stopp</button>
                <button id="reset_btn" type="button" class="reset_btn"><span class="material-symbols-outlined md-48 centered" title="timer_pause">alarm_off</span> Reset</button>
            </div>
        </div>
        {{#if enableEditing}}
            <button class="submit_btn" type="submit"><span class="material-icons md-48 centered" title="speichern">save</span> Ergebnis eintragen</button>
        {{/if}}
    </form>
</div>

{{> footer}}

<script>
    const COUNTDOWN = 80000;

    const formatTime = (milliseconds) => {
        const totalSeconds = Math.floor(Math.abs(milliseconds) / 1000);
        const minutes = Math.floor(totalSeconds / 60);
        const seconds = totalSeconds % 60;
        const ms = Math.abs(milliseconds % 1000) / 10;
        return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}.${ms < 10 ? '0' : ''}${Math.floor(ms)}`;
    }

    const updateTimer = () => {
        if (countdownTime >= 0) {
            timerDisplay.textContent = formatTime(countdownTime);
        } else {
            timerDisplay.textContent = formatTime(countdownTime);
            timerDisplay.classList.add('negative');
        }
        countdownTime -= 10;
        totalTime += 10;
    }

    const openTimerWindow = () => {
        console.log("Öffne Wertungsbildschirm")
    };

    let countdownTime = COUNTDOWN; // 3min in Millisekunden
    let timerDisplay = document.getElementById('timer-display');
    let startButton = document.getElementById('start_btn');
    let pauseButton = document.getElementById('stop_btn');
    let resetButton = document.getElementById('reset_btn');
    let fightTime = document.getElementById('fightTime');
    let interval;
    let totalTime = 0;

    startButton.addEventListener('click', () => {
        console.log("Starte");
        if (!interval) {
            interval = setInterval(updateTimer, 10);
        }
    });

    pauseButton.addEventListener('click', () => {
        console.log("Stoppe");
        clearInterval(interval);
        interval = null;
        fightTime.value = formatTime(totalTime);
    });

    resetButton.addEventListener('click', () => {
        var sicher = confirm("ACHTUNG\n\nHiermit wird die Wettkampfzeit zurückgesetzt! \n\nSind sie sicher?");
        if (sicher) {
            clearInterval(interval);
            interval = null;
            totalTime = 0;
            countdownTime = COUNTDOWN;
            updateTimer();
            fightTime.value = formatTime(totalTime);
        }
    });

</script>
</body>
</html>