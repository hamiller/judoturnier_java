<!DOCTYPE html>
<html lang="de">
<header>
  {{> header}}
</header>
<body>
<h2>Matte {{matte}} - Runde {{mattenrunde}}</h2>
<div class=""><h1>{{rundenCode}}</h1></div>
<div id="timer-container">
  <h1 id="timer-display" class=""></h1>
  <div class="time-control-buttons">
    <md-filled-button type="button" onclick="sendCommand('start')">Starte Zeit</md-filled-button>
    <md-filled-button type="button" onclick="sendCommand('stop')">Stoppe Zeit</md-filled-button>
    <md-filled-button type="button" onclick="sendCommand('reset')">Zeit zurücksetzen</md-filled-button>
  </div>
</div>
<div class="box">
  <h1>Kampfrichter</h1>

  <span class="freiraum"></span>

  <div class="qrcode">
    <img src="data:image/png;base64,{{imageWertungen}}" alt="QRCode Wettkampfwertung"/>
  </div>
</div>
<div>
  {{#each begegnungen}}
    <div class="listeneintrag vs"> {{akuellePaarung}}
      <div class="wettkaempfer name">
        <label class="{{wettkaempfer1.farbe.get}}">{{wettkaempfer1.name}}</label>
      </div>
      <div class="center">vs</div>
      <div class="wettkaempfer name">
        <label class="{{wettkaempfer2.farbe.get}}">{{wettkaempfer2.name}}</label>
      </div>
    </div>
  {{/each}}
</div>
<script src="/js/allgemein.js"></script>
<script>
  const socket = new WebSocket("/mattenanzeigews?matte=" + {{matte}});

  // Verbindungsstatus prüfen
  socket.onopen = function() {
    console.log("WebSocket-Zeit-Verbindung hergestellt");
  };

  socket.onerror = function(error) {
    console.error("WebSocket-Zeit-Fehler:", error);
  };

  socket.onclose = function() {
    console.log("WebSocket-Zeit-Verbindung geschlossen");
    // Optional: Wiederverbinden
    setTimeout(() => location.reload(), 1000);
  };

  socket.onmessage = function (event) {
    const command = event.data;
    if (command === "start") start();
    if (command === "stop") stop();
    if (command === "reset") reset();
  };

  function sendCommand(command) {
    if (command === 'reset') {
      var sicher = confirm("ACHTUNG\n\nHiermit wird die Wettkampfzeit zurückgesetzt! \n\nSind sie sicher?");
      if (!sicher) return;
    }
    socket.send(command);
  }

  const COUNTDOWN = {{kampfzeit}} * 1000; // Millisekunden
  init(COUNTDOWN);
</script>
</body>
</html>
