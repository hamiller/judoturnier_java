<!DOCTYPE html>
<html lang="de">
<header>
  {{> header}}
</header>
<body>
{{> title }}
{{> nav }}

<div>
  <div class="bodyheader no-print">
    <div class="navbar_fixed">
          <span style="position: relative">
            {{#if isadmin}}
              <md-outlined-button type="button" id="renewBegegnungen" onclick="renewBegegnungen(); return false;">Alle Wettkampfgruppen neu erstellen</md-outlined-button>
              <md-outlined-button type="button" id="deleteBegegnungen" onclick="deleteBegegnungen(); return false;">Alle Wettkampfgruppen löschen</md-outlined-button>
            {{/if}}
          </span>
      {{#each altersklassen}}
        <span style="position: relative">
                <md-filled-tonal-button id="theming-anchor-{{this}}" class="theming-anchors" altersklasse="{{this}}">{{this}}</md-filled-tonal-button>
                <md-menu id="theming-menu-{{this}}" anchor="theming-anchor-{{this}}">
                    <md-menu-item type="button" class="renewBegegnung" id="renewBegegnung_{{this}}" altersklasse="{{this}}">Wettkampfgruppen {{this}} neu zuordnen</md-menu-item>
                    <md-menu-item href="/turnier/{{turnierid}}/begegnungen/randori_printview_matches/{{this}}" target="_blank" class="">Druckansicht {{this}} Begegnungen</md-menu-item>
                    <md-menu-item href="/turnier/{{turnierid}}/begegnungen/randori_printview_matches_inserting_data/{{this}}" target="_blank" class="">Druckansicht {{this}}
                      Wertungen-Eintragen</md-menu-item>
                    <md-menu-item href="/turnier/{{turnierid}}/qrcodes/{{this}}" target="_blank" class="">QR-Codes {{this}}</md-menu-item>
                </md-menu>
            </span>
      {{/each}}
    </div>
  </div>

  {{#if preverror}}
    <div class="errormsg">Ein Fehler ist aufgetreten: {{preverror}}</div>
  {{/if}}

  <!--      {{#if separatealtersklassen.name "GETRENNT"}}-->
  <!--        <div class="filter_dropdown">-->
  <!--            <span>Filter nach Alterklasse</span>-->
  <!--            <div class="filter_dropdown-content">-->
  <!--                <a href="/turnier/{{turnierid}}/begegnungen/randori">Alle Alterklassen</a>-->
  <!--                {{#each altersklassen}}-->
    <!--                    <a href="/turnier/{{turnierid}}/begegnungen/randori?altersklasse={{this}}">Alterklasse {{this}}</a>-->
    <!--                {{/each}}-->
  <!--            </div>-->
  <!--        </div>-->
  <!--      {{/if}}-->

  <div class="">
    <md-tabs activeTabIndex="0">
      {{#each matten}}
        <md-primary-tab id="matten-tab-{{id}}" class="matten-tabs" mattenid="{{id}}">Matte {{id}}</md-primary-tab>
      {{/each}}
    </md-tabs>
  </div>

  <div class="generalcontent">

    <div id="windowStatus">Kein Wertungsfenster geöffnet.</div>
    <div id="windowStatus2">Kein Zeitfenster geöffnet.</div>

    {{#each matten}}
      <div class="matte tabcontent" id="matten-panel-{{id}}">
        <div class="listeneintrag-titel">Matte {{id}}</div>

        <div class="time-control-buttons">
          <md-filled-button type="button" class="" onclick="sendCommand('start', {{id}})">Starte Zeit</md-filled-button>
          <md-filled-button type="button" class="" onclick="sendCommand('stop', {{id}})">Stoppe Zeit</md-filled-button>
          <md-filled-button type="button" class="" onclick="sendCommand('reset', {{id}})">Zeit zurücksetzen</md-filled-button>
        </div>

        <div class="wettkampfgruppe">

          {{#each gruppenRunden}}

            {{#each runde}}
              <div class="listeneintrag-header">
                {{#if (istGleich altersklasse null)}}
                  <div class="listeneintrag-titel pause">PAUSE</div>
                {{else}}
                  <div class="listeneintrag-titel">{{gruppe.name}} ({{altersklasse}})</div>
                  <div class="listeneintrag-titel-info rechts">(Wettkampf Nr. {{mattenRunde}} auf Matte {{../id}}, Runde Nr. {{gruppenRunde}} für Gruppe {{gruppe.name}}, Gesamtrunde {{rundeGesamt}})
                  </div>
                {{/if}}
              </div>

              {{#each begegnungen}}
                {{#if (istGleich wettkaempfer1.name null)}}
                  <div class="listeneintrag">(Ansonsten wäre nun Gruppe {{../gruppe.name}} an der Reihe)</div>
                {{else}}
                  <a href="/turnier/{{turnierid}}/begegnungen/randori/{{begegnungId}}">
                    <div class="listeneintrag vs {{wertungVorhanden alleWertungen}}">
                      <div class="wettkaempfer name {{#optional wettkaempfer1.farbe}}{{wettkaempfer1.farbe.get}}{{/optional}}">{{wettkaempfer1.name}}</div>
                      <div>({{wettkaempfer1.verein.name}})</div>
                      <div class="center">vs</div>
                      <div class="wettkaempfer name {{#optional wettkaempfer2.farbe}}{{wettkaempfer2.farbe.get}}{{/optional}}">{{wettkaempfer2.name}}</div>
                      <div>({{wettkaempfer2.verein.name}})</div>
                    </div>
                  </a>
                {{/if}}
              {{/each}}
              <md-divider inset></md-divider>
              <md-filled-tonal-button type="button" class="" onclick="openTimerWindow({{../id}}, {{mattenRunde}})">Werungsfenster öffnen</md-filled-tonal-button>
            {{/each}}
          {{/each}}
        </div>
      </div>
    {{/each}}
  </div>
</div>


{{> footer}}

<script type="text/javascript">
  let controlledWindows = [];
  let controlledWindows2 = [];
  let socketZeit = []; // WebSocket-Instanz
  let socketWertung = []; // WebSocket-Instanz

  document.body.querySelectorAll(".theming-anchors").forEach(value => value.addEventListener("click", (data) => {
    var altersklasse = data.target.attributes.getNamedItem("altersklasse").value;
    console.log("Altersklasse", altersklasse);
    document.body.querySelector("#theming-menu-" + altersklasse).show();
  }));

  const sendCommand = (command, matte) => {
    console.log("Sende Command für Matte", command, matte)

    if (command == 'reset') {
      var sicher = confirm("ACHTUNG\n\nHiermit wird die Wettkampfzeit zurückgesetzt! \n\nSind sie sicher?");
      if (!sicher) return;
    }

    if (socketZeit && socketZeit[matte] && socketZeit[matte].readyState === WebSocket.OPEN) {
      socketZeit[matte].send(command);
    } else {
      alert("Wertungfenster ist nicht geöffnet.");
    }
    if (socketWertung && socketWertung[matte] && socketWertung[matte].readyState === WebSocket.OPEN) {
      socketWertung[matte].send(command);
    } else {
      alert("Zeitfenster ist nicht geöffnet.");
    }
  }

  const openTimerWindow = (matte, mattenRunde) => {
    // create new window
    console.log("Öffne Wertungsfenster für Matte und Runde", matte, mattenRunde)
    controlledWindows[matte] = window.open(
      '/turnier/{{turnierid}}/mattenanzeige/randori/' + matte + '/' + mattenRunde,
      'Wertung Matte ' + matte,
      'width=800,height=600,left=2000,top=0' // Passen Sie die Werte an Ihren zweiten Monitor an
    );
    controlledWindows[matte].onbeforeunload = () => {
      controlledWindows[matte] = null;
    };
    controlledWindows2[matte] = window.open(
      '/turnier/{{turnierid}}/mattenanzeige/randori/' + matte + '/' + mattenRunde + '/zeit',
      'Zeit Matte ' + matte,
      'width=400,height=400,left=2000,top=0' // Passen Sie die Werte an Ihren zweiten Monitor an
    );
    controlledWindows2[matte].onbeforeunload = () => {
      controlledWindows2[matte] = null;
    };

    // establish websocket
    const protocol = window.location.protocol === "https:" ? "wss" : "ws";
    const host = window.location.host; // z. B. "localhost:8080" oder "example.com"
    const path = "/mattenanzeigews?matte=" + matte; // Ihr WebSocket-Pfad
    socketWertung[matte] = new WebSocket(`${protocol}://${host}${path}` + "&type=wertung");
    socketZeit[matte] = new WebSocket(`${protocol}://${host}${path}` + "&type=zeit");

    socketWertung[matte].onopen = function () {
      console.log("Verbunden mit WebSocket Wertungsfenster, Matte ", matte);
    };
    socketWertung[matte].onclose = function () {
      console.log("WebSocket-Verbindung Wertungsfenster geschlossen, Matte ", matte);
      socketWertung[matte] = null;
    };
    socketZeit[matte].onopen = function () {
      console.log("Verbunden mit WebSocket Zeitfenster, Matte ", matte);
    };
    socketZeit[matte].onclose = function () {
      console.log("WebSocket-Verbindung Zeitfenster geschlossen, Matte ", matte);
      socketZeit[matte] = null;
    };

    updateWindowStatus(matte, mattenRunde); // UI aktualisieren
  };

  const updateWindowStatus = (matte, mattenRunde) => {
    const statusElement = document.getElementById("windowStatus");
    if (controlledWindows[matte] && !controlledWindows[matte].closed) {
      statusElement.innerText = "Geöffnetes Wertungsfenster: Matte " + matte + ", Runde " + mattenRunde;
    } else {
      statusElement.innerText = "Kein Wertungsfenster geöffnet.";
    }

    const statusElement2 = document.getElementById("windowStatus2");
    if (controlledWindows2[matte] && !controlledWindows2[matte].closed) {
      statusElement2.innerText = "Geöffnetes Zeitfenster: Matte " + matte + ", Runde " + mattenRunde;
    } else {
      statusElement2.innerText = "Kein Zeitfenster geöffnet.";
    }
  }

  const renewBegegnungen = async () => {
    var sicher = confirm("ACHTUNG\n\nHiermit werden alle bisherigen Zuordnung von Wettkämpfern in Wettkampf-Begegnungen gelöscht! \n\nSind sie sicher?");
    if (sicher) {
      console.log("Erstelle alle Begegnungen neu");
      fetch('/turnier/{{turnierid}}/begegnungen', {method: 'POST', redirect: 'follow'})
        .then(response => {
          if (response.redirected) {
            window.location.href = response.url;
          } else if (response.ok) {
            window.location.reload();
          } else {
            console.error('Error:', response.statusText);
          }
        })
    }
  }

  const renewBegegnung = async (data) => {
    var altersklasse = data.target.attributes.getNamedItem("altersklasse").value;
    console.log("Altersklasse", altersklasse);
    var sicher = confirm("ACHTUNG\n\nHiermit werden alle bisherigen Zuordnung von Wettkämpfern in der Altersklasse\n\t" + altersklasse + "\nin Wettkampf-Begegnungen gelöscht! \n\nSind sie sicher?");
    if (sicher) {
      console.log("Erstelle die Begegnungen neu", altersklasse);
      fetch('/turnier/{{turnierid}}/begegnung', {method: 'POST', body: altersklasse, redirect: 'follow'})
        .then(response => {
          if (response.redirected) {
            window.location.href = response.url;
          } else if (response.ok) {
            window.location.reload();
          } else {
            console.error('Error:', response.statusText);
          }
        })
    }
  }

  const deleteBegegnungen = async () => {
    var sicher = confirm("ACHTUNG\n\nHiermit werden alle bisherigen Zuordnung von Wettkämpfern aller Altersklassen\nin Wettkampf-Begegnungen gelöscht! \n\nSind sie sicher?");
    if (sicher) {
      fetch('/turnier/{{turnierid}}/begegnung', {method: 'DELETE', redirect: 'follow'})
        .then(response => {
          if (response.redirected) {
            window.location.href = response.url;
          } else if (response.ok) {
            window.location.reload();
          } else {
            console.error('Error:', response.statusText);
          }
        })
    }
  }

  document.body.querySelectorAll("md-tabs").forEach(tabs => tabs.addEventListener('change', function (data) {
    var mattenid = data.target.activeTab.attributes.getNamedItem("mattenid").value;
    console.log("Tab geändert zu MattenID " + mattenid);

    // Get all elements with class="tabcontent" and hide them
    document.querySelectorAll(".tabcontent").forEach(tab => {
      tab.style.display = "none"
    });

    // Show the current tab, and add an "active" class to the button that opened the tab
    document.getElementById("matten-panel-" + mattenid).style.display = "block";
  }));

  // Show 1st Matte
  document.addEventListener('DOMContentLoaded', function () {
    var tabContent = document.querySelector(".tabcontent");
    if (tabContent) tabContent.style.display = "block";
  });

</script>
</body>

</html>
